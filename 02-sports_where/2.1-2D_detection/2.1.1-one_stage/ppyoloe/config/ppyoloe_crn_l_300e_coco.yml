log_iter: 100
snapshot_epoch: 10
weights: output/ppyoloe_crn_l_300e_coco/model_final

pretrain_weights: https://paddledet.bj.bcebos.com/models/pretrained/CSPResNetb_l_pretrained.pdparams
depth_mult: 1.0
width_mult: 1.0


# datasets

metric: COCO
num_classes: 80

TrainDataset:
  COCODataSet:
    # use val data fo test
    image_dir: val2017
    anno_path: annotations/instances_val2017.json
    dataset_dir: ../
    data_fields: ['image', 'gt_bbox', 'gt_class', 'is_crowd']

EvalDataset:
  COCODataSet:
    image_dir: val2017
    anno_path: annotations/instances_val2017.json
    dataset_dir: ../

TestDataset:
  ImageFolder:
    anno_path: annotations/instances_val2017.json # also support txt (like VOC's label_list.txt)
    dataset_dir: datasets/coco # if set, anno_path will be 'dataset_dir/anno_path'


# reader
worker_num: 4
eval_height: &eval_height 640
eval_width: &eval_width 640
eval_size: &eval_size [*eval_height, *eval_width]

TrainReader:
  sample_transforms:
    - Decode: {}
    - RandomDistort: {}
    - RandomExpand: {fill_value: [123.675, 116.28, 103.53]}
    - RandomCrop: {}
    - RandomFlip: {}
  batch_transforms:
    - BatchRandomResize: {target_size: [320, 352, 384, 416, 448, 480, 512, 544, 576, 608, 640, 672, 704, 736, 768], random_size: True, random_interp: True, keep_ratio: False}
    - NormalizeImage: {mean: [0.485, 0.456, 0.406], std: [0.229, 0.224, 0.225], is_scale: True}
    - Permute: {}
    - PadGT: {}
  batch_size: 4
  shuffle: true
  drop_last: true
  use_shared_memory: true
  collate_batch: true

EvalReader:
  sample_transforms:
    - Decode: {}
    - Resize: {target_size: *eval_size, keep_ratio: False, interp: 2}
    - NormalizeImage: {mean: [0.485, 0.456, 0.406], std: [0.229, 0.224, 0.225], is_scale: True}
    - Permute: {}
  batch_size: 2

TestReader:
  inputs_def:
    image_shape: [3, *eval_height, *eval_width]
  sample_transforms:
    - Decode: {}
    - Resize: {target_size: *eval_size, keep_ratio: False, interp: 2}
    - NormalizeImage: {mean: [0.485, 0.456, 0.406], std: [0.229, 0.224, 0.225], is_scale: True}
    - Permute: {}
  batch_size: 1


# runtime

use_gpu: true
use_xpu: false
save_dir: output
filename: Picodet
print_flops: false

# optimizer

epoch: 300

LearningRate:
  base_lr: 0.025
  schedulers:
  - CosineDecay:
      max_epochs: 360
  - LinearWarmup:
      start_factor: 0.
      epochs: 5

OptimizerBuilder:
  optimizer:
    momentum: 0.9
    type: Momentum
  regularizer:
    factor: 0.0005
    type: L2

# crn

architecture: YOLOv3
norm_type: sync_bn
use_ema: true
ema_decay: 0.9998

YOLOv3:
  backbone:
    CSPResNet:
      layers: [ 3, 6, 6, 3 ]
      channels: [ 64, 128, 256, 512, 1024 ]
      return_idx: [ 1, 2, 3 ]
      use_large_stem: True
  neck:
    CustomCSPPAN:
      out_channels: [ 1024, 512, 256 ]
#      out_channels: [ 768, 384, 192 ]
      stage_num: 1
      block_num: 3
      act: 'swish'
      spp: true
  yolo_head:
    PPYOLOEHead:
      fpn_strides: [ 32, 16, 8 ]
      grid_cell_scale: 5.0
      grid_cell_offset: 0.5
      static_assigner_epoch: 100
      use_varifocal_loss: True
      loss_weight: { class: 1.0, iou: 2.5, dfl: 0.5 }
      static_assigner:
        name: ATSSAssigner
        topk: 9
      assigner:
        name: TaskAlignedAssigner
        topk: 13
        alpha: 1.0
        beta: 6.0
      nms:
        name: MultiClassNMS
        nms_top_k: 1000
        keep_top_k: 300
        score_threshold: 0.01
        nms_threshold: 0.7
  post_process: ~

